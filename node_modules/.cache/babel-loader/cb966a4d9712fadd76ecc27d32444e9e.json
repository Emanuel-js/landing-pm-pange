{"ast":null,"code":"import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { useFeatures } from './features/use-features.js';\nimport { MotionConfigContext } from '../context/MotionConfigContext.js';\nimport { MotionContext } from '../context/MotionContext/index.js';\nimport { useVisualElement } from './utils/use-visual-element.js';\nimport { useMotionRef } from './utils/use-motion-ref.js';\nimport { useCreateMotionContext } from '../context/MotionContext/create.js';\nimport { loadFeatures } from './features/definitions.js';\nimport { isBrowser } from '../utils/is-browser.js';\n/**\r\n * Create a `motion` component.\r\n *\r\n * This function accepts a Component argument, which can be either a string (ie \"div\"\r\n * for `motion.div`), or an actual React component.\r\n *\r\n * Alongside this is a config option which provides a way of rendering the provided\r\n * component \"offline\", or outside the React render cycle.\r\n *\r\n * @internal\r\n */\n\nfunction createMotionComponent(_a) {\n  var preloadedFeatures = _a.preloadedFeatures,\n      createVisualElement = _a.createVisualElement,\n      useRender = _a.useRender,\n      useVisualState = _a.useVisualState,\n      Component = _a.Component;\n  preloadedFeatures && loadFeatures(preloadedFeatures);\n\n  function MotionComponent(props, externalRef) {\n    /**\r\n     * If we're rendering in a static environment, we only visually update the component\r\n     * as a result of a React-rerender rather than interactions or animations. This\r\n     * means we don't need to load additional memory structures like VisualElement,\r\n     * or any gesture/animation features.\r\n     */\n    var isStatic = useContext(MotionConfigContext).isStatic;\n    var features = null;\n    /**\r\n     * Create the tree context. This is memoized and will only trigger renders\r\n     * when the current tree variant changes in static mode.\r\n     */\n\n    var context = useCreateMotionContext(props, isStatic);\n    /**\r\n     *\r\n     */\n\n    var visualState = useVisualState(props, isStatic);\n\n    if (!isStatic && isBrowser) {\n      /**\r\n       * Create a VisualElement for this component. A VisualElement provides a common\r\n       * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\r\n       * providing a way of rendering to these APIs outside of the React render loop\r\n       * for more performant animations and interactions\r\n       */\n      context.visualElement = useVisualElement(Component, visualState, props, createVisualElement);\n      /**\r\n       * Load Motion gesture and animation features. These are rendered as renderless\r\n       * components so each feature can optionally make use of React lifecycle methods.\r\n       *\r\n       * TODO: The intention is to move these away from a React-centric to a\r\n       * VisualElement-centric lifecycle scheme.\r\n       */\n\n      features = useFeatures(props, context.visualElement, preloadedFeatures);\n    }\n    /**\r\n     * The mount order and hierarchy is specific to ensure our element ref\r\n     * is hydrated by the time features fire their effects.\r\n     */\n\n\n    return React.createElement(React.Fragment, null, React.createElement(MotionContext.Provider, {\n      value: context\n    }, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic)), features);\n  }\n\n  return forwardRef(MotionComponent);\n}\n\nexport { createMotionComponent };","map":{"version":3,"names":["React","forwardRef","useContext","useFeatures","MotionConfigContext","MotionContext","useVisualElement","useMotionRef","useCreateMotionContext","loadFeatures","isBrowser","createMotionComponent","_a","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","MotionComponent","props","externalRef","isStatic","features","context","visualState","visualElement","createElement","Fragment","Provider","value"],"sources":["E:/Projects/project/project mangement dashbord/landing-pm-pange/node_modules/framer-motion/dist/es/motion/index.js"],"sourcesContent":["import * as React from 'react';\r\nimport { forwardRef, useContext } from 'react';\r\nimport { useFeatures } from './features/use-features.js';\r\nimport { MotionConfigContext } from '../context/MotionConfigContext.js';\r\nimport { MotionContext } from '../context/MotionContext/index.js';\r\nimport { useVisualElement } from './utils/use-visual-element.js';\r\nimport { useMotionRef } from './utils/use-motion-ref.js';\r\nimport { useCreateMotionContext } from '../context/MotionContext/create.js';\r\nimport { loadFeatures } from './features/definitions.js';\r\nimport { isBrowser } from '../utils/is-browser.js';\r\n\r\n/**\r\n * Create a `motion` component.\r\n *\r\n * This function accepts a Component argument, which can be either a string (ie \"div\"\r\n * for `motion.div`), or an actual React component.\r\n *\r\n * Alongside this is a config option which provides a way of rendering the provided\r\n * component \"offline\", or outside the React render cycle.\r\n *\r\n * @internal\r\n */\r\nfunction createMotionComponent(_a) {\r\n    var preloadedFeatures = _a.preloadedFeatures, createVisualElement = _a.createVisualElement, useRender = _a.useRender, useVisualState = _a.useVisualState, Component = _a.Component;\r\n    preloadedFeatures && loadFeatures(preloadedFeatures);\r\n    function MotionComponent(props, externalRef) {\r\n        /**\r\n         * If we're rendering in a static environment, we only visually update the component\r\n         * as a result of a React-rerender rather than interactions or animations. This\r\n         * means we don't need to load additional memory structures like VisualElement,\r\n         * or any gesture/animation features.\r\n         */\r\n        var isStatic = useContext(MotionConfigContext).isStatic;\r\n        var features = null;\r\n        /**\r\n         * Create the tree context. This is memoized and will only trigger renders\r\n         * when the current tree variant changes in static mode.\r\n         */\r\n        var context = useCreateMotionContext(props, isStatic);\r\n        /**\r\n         *\r\n         */\r\n        var visualState = useVisualState(props, isStatic);\r\n        if (!isStatic && isBrowser) {\r\n            /**\r\n             * Create a VisualElement for this component. A VisualElement provides a common\r\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\r\n             * providing a way of rendering to these APIs outside of the React render loop\r\n             * for more performant animations and interactions\r\n             */\r\n            context.visualElement = useVisualElement(Component, visualState, props, createVisualElement);\r\n            /**\r\n             * Load Motion gesture and animation features. These are rendered as renderless\r\n             * components so each feature can optionally make use of React lifecycle methods.\r\n             *\r\n             * TODO: The intention is to move these away from a React-centric to a\r\n             * VisualElement-centric lifecycle scheme.\r\n             */\r\n            features = useFeatures(props, context.visualElement, preloadedFeatures);\r\n        }\r\n        /**\r\n         * The mount order and hierarchy is specific to ensure our element ref\r\n         * is hydrated by the time features fire their effects.\r\n         */\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic)),\r\n            features));\r\n    }\r\n    return forwardRef(MotionComponent);\r\n}\r\n\r\nexport { createMotionComponent };\r\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,OAAvC;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,mBAAT,QAAoC,mCAApC;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,sBAAT,QAAuC,oCAAvC;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,qBAAT,CAA+BC,EAA/B,EAAmC;EAC/B,IAAIC,iBAAiB,GAAGD,EAAE,CAACC,iBAA3B;EAAA,IAA8CC,mBAAmB,GAAGF,EAAE,CAACE,mBAAvE;EAAA,IAA4FC,SAAS,GAAGH,EAAE,CAACG,SAA3G;EAAA,IAAsHC,cAAc,GAAGJ,EAAE,CAACI,cAA1I;EAAA,IAA0JC,SAAS,GAAGL,EAAE,CAACK,SAAzK;EACAJ,iBAAiB,IAAIJ,YAAY,CAACI,iBAAD,CAAjC;;EACA,SAASK,eAAT,CAAyBC,KAAzB,EAAgCC,WAAhC,EAA6C;IACzC;AACR;AACA;AACA;AACA;AACA;IACQ,IAAIC,QAAQ,GAAGnB,UAAU,CAACE,mBAAD,CAAV,CAAgCiB,QAA/C;IACA,IAAIC,QAAQ,GAAG,IAAf;IACA;AACR;AACA;AACA;;IACQ,IAAIC,OAAO,GAAGf,sBAAsB,CAACW,KAAD,EAAQE,QAAR,CAApC;IACA;AACR;AACA;;IACQ,IAAIG,WAAW,GAAGR,cAAc,CAACG,KAAD,EAAQE,QAAR,CAAhC;;IACA,IAAI,CAACA,QAAD,IAAaX,SAAjB,EAA4B;MACxB;AACZ;AACA;AACA;AACA;AACA;MACYa,OAAO,CAACE,aAAR,GAAwBnB,gBAAgB,CAACW,SAAD,EAAYO,WAAZ,EAAyBL,KAAzB,EAAgCL,mBAAhC,CAAxC;MACA;AACZ;AACA;AACA;AACA;AACA;AACA;;MACYQ,QAAQ,GAAGnB,WAAW,CAACgB,KAAD,EAAQI,OAAO,CAACE,aAAhB,EAA+BZ,iBAA/B,CAAtB;IACH;IACD;AACR;AACA;AACA;;;IACQ,OAAQb,KAAK,CAAC0B,aAAN,CAAoB1B,KAAK,CAAC2B,QAA1B,EAAoC,IAApC,EACJ3B,KAAK,CAAC0B,aAAN,CAAoBrB,aAAa,CAACuB,QAAlC,EAA4C;MAAEC,KAAK,EAAEN;IAAT,CAA5C,EAAgER,SAAS,CAACE,SAAD,EAAYE,KAAZ,EAAmBZ,YAAY,CAACiB,WAAD,EAAcD,OAAO,CAACE,aAAtB,EAAqCL,WAArC,CAA/B,EAAkFI,WAAlF,EAA+FH,QAA/F,CAAzE,CADI,EAEJC,QAFI,CAAR;EAGH;;EACD,OAAOrB,UAAU,CAACiB,eAAD,CAAjB;AACH;;AAED,SAASP,qBAAT"},"metadata":{},"sourceType":"module"}