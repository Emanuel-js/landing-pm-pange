{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBoundPosition = getBoundPosition;\nexports.snapToGrid = snapToGrid;\nexports.canDragX = canDragX;\nexports.canDragY = canDragY;\nexports.getControlPosition = getControlPosition;\nexports.createCoreData = createCoreData;\nexports.createDraggableData = createDraggableData;\n\nvar _shims = require(\"./shims\");\n\nvar _domFns = require(\"./domFns\");\n\nfunction getBoundPosition(draggable\n/*: Draggable*/\n, x\n/*: number*/\n, y\n/*: number*/\n)\n/*: [number, number]*/\n{\n  // If no bounds, short-circuit and move on\n  if (!draggable.props.bounds) return [x, y]; // Clone new bounds\n\n  var bounds = draggable.props.bounds;\n  bounds = typeof bounds === 'string' ? bounds : cloneBounds(bounds);\n  var node = findDOMNode(draggable);\n\n  if (typeof bounds === 'string') {\n    var ownerDocument = node.ownerDocument;\n    var ownerWindow = ownerDocument.defaultView;\n    var boundNode;\n\n    if (bounds === 'parent') {\n      boundNode = node.parentNode;\n    } else {\n      boundNode = ownerDocument.querySelector(bounds);\n    }\n\n    if (!(boundNode instanceof ownerWindow.HTMLElement)) {\n      throw new Error('Bounds selector \"' + bounds + '\" could not find an element.');\n    }\n\n    var nodeStyle = ownerWindow.getComputedStyle(node);\n    var boundNodeStyle = ownerWindow.getComputedStyle(boundNode); // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.\n\n    bounds = {\n      left: -node.offsetLeft + (0, _shims.int)(boundNodeStyle.paddingLeft) + (0, _shims.int)(nodeStyle.marginLeft),\n      top: -node.offsetTop + (0, _shims.int)(boundNodeStyle.paddingTop) + (0, _shims.int)(nodeStyle.marginTop),\n      right: (0, _domFns.innerWidth)(boundNode) - (0, _domFns.outerWidth)(node) - node.offsetLeft + (0, _shims.int)(boundNodeStyle.paddingRight) - (0, _shims.int)(nodeStyle.marginRight),\n      bottom: (0, _domFns.innerHeight)(boundNode) - (0, _domFns.outerHeight)(node) - node.offsetTop + (0, _shims.int)(boundNodeStyle.paddingBottom) - (0, _shims.int)(nodeStyle.marginBottom)\n    };\n  } // Keep x and y below right and bottom limits...\n\n\n  if ((0, _shims.isNum)(bounds.right)) x = Math.min(x, bounds.right);\n  if ((0, _shims.isNum)(bounds.bottom)) y = Math.min(y, bounds.bottom); // But above left and top limits.\n\n  if ((0, _shims.isNum)(bounds.left)) x = Math.max(x, bounds.left);\n  if ((0, _shims.isNum)(bounds.top)) y = Math.max(y, bounds.top);\n  return [x, y];\n}\n\nfunction snapToGrid(grid\n/*: [number, number]*/\n, pendingX\n/*: number*/\n, pendingY\n/*: number*/\n)\n/*: [number, number]*/\n{\n  var x = Math.round(pendingX / grid[0]) * grid[0];\n  var y = Math.round(pendingY / grid[1]) * grid[1];\n  return [x, y];\n}\n\nfunction canDragX(draggable\n/*: Draggable*/\n)\n/*: boolean*/\n{\n  return draggable.props.axis === 'both' || draggable.props.axis === 'x';\n}\n\nfunction canDragY(draggable\n/*: Draggable*/\n)\n/*: boolean*/\n{\n  return draggable.props.axis === 'both' || draggable.props.axis === 'y';\n} // Get {x, y} positions from event.\n\n\nfunction getControlPosition(e\n/*: MouseTouchEvent*/\n, touchIdentifier\n/*: ?number*/\n, draggableCore\n/*: DraggableCore*/\n)\n/*: ?ControlPosition*/\n{\n  var touchObj = typeof touchIdentifier === 'number' ? (0, _domFns.getTouch)(e, touchIdentifier) : null;\n  if (typeof touchIdentifier === 'number' && !touchObj) return null; // not the right touch\n\n  var node = findDOMNode(draggableCore); // User can provide an offsetParent if desired.\n\n  var offsetParent = draggableCore.props.offsetParent || node.offsetParent || node.ownerDocument.body;\n  return (0, _domFns.offsetXYFromParent)(touchObj || e, offsetParent, draggableCore.props.scale);\n} // Create an data object exposed by <DraggableCore>'s events\n\n\nfunction createCoreData(draggable\n/*: DraggableCore*/\n, x\n/*: number*/\n, y\n/*: number*/\n)\n/*: DraggableData*/\n{\n  var state = draggable.state;\n  var isStart = !(0, _shims.isNum)(state.lastX);\n  var node = findDOMNode(draggable);\n\n  if (isStart) {\n    // If this is our first move, use the x and y as last coords.\n    return {\n      node: node,\n      deltaX: 0,\n      deltaY: 0,\n      lastX: x,\n      lastY: y,\n      x: x,\n      y: y\n    };\n  } else {\n    // Otherwise calculate proper values.\n    return {\n      node: node,\n      deltaX: x - state.lastX,\n      deltaY: y - state.lastY,\n      lastX: state.lastX,\n      lastY: state.lastY,\n      x: x,\n      y: y\n    };\n  }\n} // Create an data exposed by <Draggable>'s events\n\n\nfunction createDraggableData(draggable\n/*: Draggable*/\n, coreData\n/*: DraggableData*/\n)\n/*: DraggableData*/\n{\n  var scale = draggable.props.scale;\n  return {\n    node: coreData.node,\n    x: draggable.state.x + coreData.deltaX / scale,\n    y: draggable.state.y + coreData.deltaY / scale,\n    deltaX: coreData.deltaX / scale,\n    deltaY: coreData.deltaY / scale,\n    lastX: draggable.state.x,\n    lastY: draggable.state.y\n  };\n} // A lot faster than stringify/parse\n\n\nfunction cloneBounds(bounds\n/*: Bounds*/\n)\n/*: Bounds*/\n{\n  return {\n    left: bounds.left,\n    top: bounds.top,\n    right: bounds.right,\n    bottom: bounds.bottom\n  };\n}\n\nfunction findDOMNode(draggable\n/*: Draggable | DraggableCore*/\n)\n/*: HTMLElement*/\n{\n  var node = draggable.findDOMNode();\n\n  if (!node) {\n    throw new Error('<DraggableCore>: Unmounted during event!');\n  } // $FlowIgnore we can't assert on HTMLElement due to tests... FIXME\n\n\n  return node;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getBoundPosition","snapToGrid","canDragX","canDragY","getControlPosition","createCoreData","createDraggableData","_shims","require","_domFns","draggable","x","y","props","bounds","cloneBounds","node","findDOMNode","ownerDocument","ownerWindow","defaultView","boundNode","parentNode","querySelector","HTMLElement","Error","nodeStyle","getComputedStyle","boundNodeStyle","left","offsetLeft","int","paddingLeft","marginLeft","top","offsetTop","paddingTop","marginTop","right","innerWidth","outerWidth","paddingRight","marginRight","bottom","innerHeight","outerHeight","paddingBottom","marginBottom","isNum","Math","min","max","grid","pendingX","pendingY","round","axis","e","touchIdentifier","draggableCore","touchObj","getTouch","offsetParent","body","offsetXYFromParent","scale","state","isStart","lastX","deltaX","deltaY","lastY","coreData"],"sources":["C:/Users/User/Desktop/ArifPAy/other file/me/node_modules/react-draggable/build/cjs/utils/positionFns.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBoundPosition = getBoundPosition;\nexports.snapToGrid = snapToGrid;\nexports.canDragX = canDragX;\nexports.canDragY = canDragY;\nexports.getControlPosition = getControlPosition;\nexports.createCoreData = createCoreData;\nexports.createDraggableData = createDraggableData;\n\nvar _shims = require(\"./shims\");\n\nvar _domFns = require(\"./domFns\");\n\nfunction getBoundPosition(draggable\n/*: Draggable*/\n, x\n/*: number*/\n, y\n/*: number*/\n)\n/*: [number, number]*/\n{\n  // If no bounds, short-circuit and move on\n  if (!draggable.props.bounds) return [x, y]; // Clone new bounds\n\n  var bounds = draggable.props.bounds;\n  bounds = typeof bounds === 'string' ? bounds : cloneBounds(bounds);\n  var node = findDOMNode(draggable);\n\n  if (typeof bounds === 'string') {\n    var ownerDocument = node.ownerDocument;\n    var ownerWindow = ownerDocument.defaultView;\n    var boundNode;\n\n    if (bounds === 'parent') {\n      boundNode = node.parentNode;\n    } else {\n      boundNode = ownerDocument.querySelector(bounds);\n    }\n\n    if (!(boundNode instanceof ownerWindow.HTMLElement)) {\n      throw new Error('Bounds selector \"' + bounds + '\" could not find an element.');\n    }\n\n    var nodeStyle = ownerWindow.getComputedStyle(node);\n    var boundNodeStyle = ownerWindow.getComputedStyle(boundNode); // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.\n\n    bounds = {\n      left: -node.offsetLeft + (0, _shims.int)(boundNodeStyle.paddingLeft) + (0, _shims.int)(nodeStyle.marginLeft),\n      top: -node.offsetTop + (0, _shims.int)(boundNodeStyle.paddingTop) + (0, _shims.int)(nodeStyle.marginTop),\n      right: (0, _domFns.innerWidth)(boundNode) - (0, _domFns.outerWidth)(node) - node.offsetLeft + (0, _shims.int)(boundNodeStyle.paddingRight) - (0, _shims.int)(nodeStyle.marginRight),\n      bottom: (0, _domFns.innerHeight)(boundNode) - (0, _domFns.outerHeight)(node) - node.offsetTop + (0, _shims.int)(boundNodeStyle.paddingBottom) - (0, _shims.int)(nodeStyle.marginBottom)\n    };\n  } // Keep x and y below right and bottom limits...\n\n\n  if ((0, _shims.isNum)(bounds.right)) x = Math.min(x, bounds.right);\n  if ((0, _shims.isNum)(bounds.bottom)) y = Math.min(y, bounds.bottom); // But above left and top limits.\n\n  if ((0, _shims.isNum)(bounds.left)) x = Math.max(x, bounds.left);\n  if ((0, _shims.isNum)(bounds.top)) y = Math.max(y, bounds.top);\n  return [x, y];\n}\n\nfunction snapToGrid(grid\n/*: [number, number]*/\n, pendingX\n/*: number*/\n, pendingY\n/*: number*/\n)\n/*: [number, number]*/\n{\n  var x = Math.round(pendingX / grid[0]) * grid[0];\n  var y = Math.round(pendingY / grid[1]) * grid[1];\n  return [x, y];\n}\n\nfunction canDragX(draggable\n/*: Draggable*/\n)\n/*: boolean*/\n{\n  return draggable.props.axis === 'both' || draggable.props.axis === 'x';\n}\n\nfunction canDragY(draggable\n/*: Draggable*/\n)\n/*: boolean*/\n{\n  return draggable.props.axis === 'both' || draggable.props.axis === 'y';\n} // Get {x, y} positions from event.\n\n\nfunction getControlPosition(e\n/*: MouseTouchEvent*/\n, touchIdentifier\n/*: ?number*/\n, draggableCore\n/*: DraggableCore*/\n)\n/*: ?ControlPosition*/\n{\n  var touchObj = typeof touchIdentifier === 'number' ? (0, _domFns.getTouch)(e, touchIdentifier) : null;\n  if (typeof touchIdentifier === 'number' && !touchObj) return null; // not the right touch\n\n  var node = findDOMNode(draggableCore); // User can provide an offsetParent if desired.\n\n  var offsetParent = draggableCore.props.offsetParent || node.offsetParent || node.ownerDocument.body;\n  return (0, _domFns.offsetXYFromParent)(touchObj || e, offsetParent, draggableCore.props.scale);\n} // Create an data object exposed by <DraggableCore>'s events\n\n\nfunction createCoreData(draggable\n/*: DraggableCore*/\n, x\n/*: number*/\n, y\n/*: number*/\n)\n/*: DraggableData*/\n{\n  var state = draggable.state;\n  var isStart = !(0, _shims.isNum)(state.lastX);\n  var node = findDOMNode(draggable);\n\n  if (isStart) {\n    // If this is our first move, use the x and y as last coords.\n    return {\n      node: node,\n      deltaX: 0,\n      deltaY: 0,\n      lastX: x,\n      lastY: y,\n      x: x,\n      y: y\n    };\n  } else {\n    // Otherwise calculate proper values.\n    return {\n      node: node,\n      deltaX: x - state.lastX,\n      deltaY: y - state.lastY,\n      lastX: state.lastX,\n      lastY: state.lastY,\n      x: x,\n      y: y\n    };\n  }\n} // Create an data exposed by <Draggable>'s events\n\n\nfunction createDraggableData(draggable\n/*: Draggable*/\n, coreData\n/*: DraggableData*/\n)\n/*: DraggableData*/\n{\n  var scale = draggable.props.scale;\n  return {\n    node: coreData.node,\n    x: draggable.state.x + coreData.deltaX / scale,\n    y: draggable.state.y + coreData.deltaY / scale,\n    deltaX: coreData.deltaX / scale,\n    deltaY: coreData.deltaY / scale,\n    lastX: draggable.state.x,\n    lastY: draggable.state.y\n  };\n} // A lot faster than stringify/parse\n\n\nfunction cloneBounds(bounds\n/*: Bounds*/\n)\n/*: Bounds*/\n{\n  return {\n    left: bounds.left,\n    top: bounds.top,\n    right: bounds.right,\n    bottom: bounds.bottom\n  };\n}\n\nfunction findDOMNode(draggable\n/*: Draggable | DraggableCore*/\n)\n/*: HTMLElement*/\n{\n  var node = draggable.findDOMNode();\n\n  if (!node) {\n    throw new Error('<DraggableCore>: Unmounted during event!');\n  } // $FlowIgnore we can't assert on HTMLElement due to tests... FIXME\n\n\n  return node;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}