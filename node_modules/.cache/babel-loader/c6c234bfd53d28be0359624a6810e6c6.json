{"ast":null,"code":"import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.js';\nvar safeMin = 0.001;\nvar minDuration = 0.01;\nvar maxDuration = 10.0;\nvar minDamping = 0.05;\nvar maxDamping = 1;\n\nfunction findSpring(_a) {\n  var _b = _a.duration,\n      duration = _b === void 0 ? 800 : _b,\n      _c = _a.bounce,\n      bounce = _c === void 0 ? 0.25 : _c,\n      _d = _a.velocity,\n      velocity = _d === void 0 ? 0 : _d,\n      _e = _a.mass,\n      mass = _e === void 0 ? 1 : _e;\n  var envelope;\n  var derivative;\n  warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n  var dampingRatio = 1 - bounce;\n  dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n  duration = clamp(minDuration, maxDuration, duration / 1000);\n\n  if (dampingRatio < 1) {\n    envelope = function (undampedFreq) {\n      var exponentialDecay = undampedFreq * dampingRatio;\n      var delta = exponentialDecay * duration;\n      var a = exponentialDecay - velocity;\n      var b = calcAngularFreq(undampedFreq, dampingRatio);\n      var c = Math.exp(-delta);\n      return safeMin - a / b * c;\n    };\n\n    derivative = function (undampedFreq) {\n      var exponentialDecay = undampedFreq * dampingRatio;\n      var delta = exponentialDecay * duration;\n      var d = delta * velocity + velocity;\n      var e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n      var f = Math.exp(-delta);\n      var g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n      var factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n      return factor * ((d - e) * f) / g;\n    };\n  } else {\n    envelope = function (undampedFreq) {\n      var a = Math.exp(-undampedFreq * duration);\n      var b = (undampedFreq - velocity) * duration + 1;\n      return -safeMin + a * b;\n    };\n\n    derivative = function (undampedFreq) {\n      var a = Math.exp(-undampedFreq * duration);\n      var b = (velocity - undampedFreq) * (duration * duration);\n      return a * b;\n    };\n  }\n\n  var initialGuess = 5 / duration;\n  var undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n\n  if (isNaN(undampedFreq)) {\n    return {\n      stiffness: 100,\n      damping: 10\n    };\n  } else {\n    var stiffness = Math.pow(undampedFreq, 2) * mass;\n    return {\n      stiffness: stiffness,\n      damping: dampingRatio * 2 * Math.sqrt(mass * stiffness)\n    };\n  }\n}\n\nvar rootIterations = 12;\n\nfunction approximateRoot(envelope, derivative, initialGuess) {\n  var result = initialGuess;\n\n  for (var i = 1; i < rootIterations; i++) {\n    result = result - envelope(result) / derivative(result);\n  }\n\n  return result;\n}\n\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n  return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };","map":{"version":3,"names":["warning","clamp","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","_a","_b","duration","_c","bounce","_d","velocity","_e","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","Math","exp","d","e","pow","f","g","factor","initialGuess","approximateRoot","isNaN","stiffness","damping","sqrt","rootIterations","result","i"],"sources":["C:/Users/User/Desktop/ArifPAy/other file/me/node_modules/popmotion/dist/es/animations/utils/find-spring.js"],"sourcesContent":["import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.js';\n\nvar safeMin = 0.001;\nvar minDuration = 0.01;\nvar maxDuration = 10.0;\nvar minDamping = 0.05;\nvar maxDamping = 1;\nfunction findSpring(_a) {\n    var _b = _a.duration, duration = _b === void 0 ? 800 : _b, _c = _a.bounce, bounce = _c === void 0 ? 0.25 : _c, _d = _a.velocity, velocity = _d === void 0 ? 0 : _d, _e = _a.mass, mass = _e === void 0 ? 1 : _e;\n    var envelope;\n    var derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    var dampingRatio = 1 - bounce;\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        envelope = function (undampedFreq) {\n            var exponentialDecay = undampedFreq * dampingRatio;\n            var delta = exponentialDecay * duration;\n            var a = exponentialDecay - velocity;\n            var b = calcAngularFreq(undampedFreq, dampingRatio);\n            var c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = function (undampedFreq) {\n            var exponentialDecay = undampedFreq * dampingRatio;\n            var delta = exponentialDecay * duration;\n            var d = delta * velocity + velocity;\n            var e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            var f = Math.exp(-delta);\n            var g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            var factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        envelope = function (undampedFreq) {\n            var a = Math.exp(-undampedFreq * duration);\n            var b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = function (undampedFreq) {\n            var a = Math.exp(-undampedFreq * duration);\n            var b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    var initialGuess = 5 / duration;\n    var undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n        };\n    }\n    else {\n        var stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness: stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n        };\n    }\n}\nvar rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    var result = initialGuess;\n    for (var i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}