{"ast":null,"code":"import { __assign } from 'tslib';\nimport { noop } from '../noop.js';\n/**\r\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\r\n * it's easier to consider each axis individually. This function returns a bounding box\r\n * as a map of single-axis min/max values.\r\n */\n\nfunction convertBoundingBoxToAxisBox(_a) {\n  var top = _a.top,\n      left = _a.left,\n      right = _a.right,\n      bottom = _a.bottom;\n  return {\n    x: {\n      min: left,\n      max: right\n    },\n    y: {\n      min: top,\n      max: bottom\n    }\n  };\n}\n\nfunction convertAxisBoxToBoundingBox(_a) {\n  var x = _a.x,\n      y = _a.y;\n  return {\n    top: y.min,\n    bottom: y.max,\n    left: x.min,\n    right: x.max\n  };\n}\n/**\r\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\r\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\r\n * when measuring DOM elements and DOM event points.\r\n */\n\n\nfunction transformBoundingBox(_a, transformPoint) {\n  var top = _a.top,\n      left = _a.left,\n      bottom = _a.bottom,\n      right = _a.right;\n\n  if (transformPoint === void 0) {\n    transformPoint = noop;\n  }\n\n  var topLeft = transformPoint({\n    x: left,\n    y: top\n  });\n  var bottomRight = transformPoint({\n    x: right,\n    y: bottom\n  });\n  return {\n    top: topLeft.y,\n    left: topLeft.x,\n    bottom: bottomRight.y,\n    right: bottomRight.x\n  };\n}\n/**\r\n * Create an empty axis box of zero size\r\n */\n\n\nfunction axisBox() {\n  return {\n    x: {\n      min: 0,\n      max: 1\n    },\n    y: {\n      min: 0,\n      max: 1\n    }\n  };\n}\n\nfunction copyAxisBox(box) {\n  return {\n    x: __assign({}, box.x),\n    y: __assign({}, box.y)\n  };\n}\n/**\r\n * Create an empty box delta\r\n */\n\n\nvar zeroDelta = {\n  translate: 0,\n  scale: 1,\n  origin: 0,\n  originPoint: 0\n};\n\nfunction delta() {\n  return {\n    x: __assign({}, zeroDelta),\n    y: __assign({}, zeroDelta)\n  };\n}\n\nexport { axisBox, convertAxisBoxToBoundingBox, convertBoundingBoxToAxisBox, copyAxisBox, delta, transformBoundingBox };","map":{"version":3,"names":["__assign","noop","convertBoundingBoxToAxisBox","_a","top","left","right","bottom","x","min","max","y","convertAxisBoxToBoundingBox","transformBoundingBox","transformPoint","topLeft","bottomRight","axisBox","copyAxisBox","box","zeroDelta","translate","scale","origin","originPoint","delta"],"sources":["E:/Projects/project/project mangement dashbord/landing-pm-pange/node_modules/framer-motion/dist/es/utils/geometry/index.js"],"sourcesContent":["import { __assign } from 'tslib';\r\nimport { noop } from '../noop.js';\r\n\r\n/**\r\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\r\n * it's easier to consider each axis individually. This function returns a bounding box\r\n * as a map of single-axis min/max values.\r\n */\r\nfunction convertBoundingBoxToAxisBox(_a) {\r\n    var top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;\r\n    return {\r\n        x: { min: left, max: right },\r\n        y: { min: top, max: bottom },\r\n    };\r\n}\r\nfunction convertAxisBoxToBoundingBox(_a) {\r\n    var x = _a.x, y = _a.y;\r\n    return {\r\n        top: y.min,\r\n        bottom: y.max,\r\n        left: x.min,\r\n        right: x.max,\r\n    };\r\n}\r\n/**\r\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\r\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\r\n * when measuring DOM elements and DOM event points.\r\n */\r\nfunction transformBoundingBox(_a, transformPoint) {\r\n    var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\r\n    if (transformPoint === void 0) { transformPoint = noop; }\r\n    var topLeft = transformPoint({ x: left, y: top });\r\n    var bottomRight = transformPoint({ x: right, y: bottom });\r\n    return {\r\n        top: topLeft.y,\r\n        left: topLeft.x,\r\n        bottom: bottomRight.y,\r\n        right: bottomRight.x,\r\n    };\r\n}\r\n/**\r\n * Create an empty axis box of zero size\r\n */\r\nfunction axisBox() {\r\n    return { x: { min: 0, max: 1 }, y: { min: 0, max: 1 } };\r\n}\r\nfunction copyAxisBox(box) {\r\n    return {\r\n        x: __assign({}, box.x),\r\n        y: __assign({}, box.y),\r\n    };\r\n}\r\n/**\r\n * Create an empty box delta\r\n */\r\nvar zeroDelta = {\r\n    translate: 0,\r\n    scale: 1,\r\n    origin: 0,\r\n    originPoint: 0,\r\n};\r\nfunction delta() {\r\n    return {\r\n        x: __assign({}, zeroDelta),\r\n        y: __assign({}, zeroDelta),\r\n    };\r\n}\r\n\r\nexport { axisBox, convertAxisBoxToBoundingBox, convertBoundingBoxToAxisBox, copyAxisBox, delta, transformBoundingBox };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}