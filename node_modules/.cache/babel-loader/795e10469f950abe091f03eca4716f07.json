{"ast":null,"code":"import { resetBox, applyTreeDeltas } from '../../utils/geometry/delta-apply.js';\nimport { updateBoxDelta } from '../../utils/geometry/delta-calc.js';\n\nfunction updateLayoutDeltas(_a, _b, treePath, transformOrigin) {\n  var delta = _a.delta,\n      layout = _a.layout,\n      layoutCorrected = _a.layoutCorrected,\n      treeScale = _a.treeScale;\n  var target = _b.target;\n  /**\r\n   * Reset the corrected box with the latest values from box, as we're then going\r\n   * to perform mutative operations on it.\r\n   */\n\n  resetBox(layoutCorrected, layout);\n  /**\r\n   * Apply all the parent deltas to this box to produce the corrected box. This\r\n   * is the layout box, as it will appear on screen as a result of the transforms of its parents.\r\n   */\n\n  applyTreeDeltas(layoutCorrected, treeScale, treePath);\n  /**\r\n   * Update the delta between the corrected box and the target box before user-set transforms were applied.\r\n   * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\r\n   * for our layout reprojection, but still allow them to be scaled correctly by the user.\r\n   * It might be that to simplify this we may want to accept that user-set scale1 is also corrected\r\n   * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\r\n   * to allow people to choose whether these styles are corrected based on just the\r\n   * layout reprojection or the final bounding box.\r\n   */\n\n  updateBoxDelta(delta, layoutCorrected, target, transformOrigin);\n}\n\nexport { updateLayoutDeltas };","map":{"version":3,"names":["resetBox","applyTreeDeltas","updateBoxDelta","updateLayoutDeltas","_a","_b","treePath","transformOrigin","delta","layout","layoutCorrected","treeScale","target"],"sources":["E:/Projects/project/project mangement dashbord/landing-pm-pange/node_modules/framer-motion/dist/es/render/utils/projection.js"],"sourcesContent":["import { resetBox, applyTreeDeltas } from '../../utils/geometry/delta-apply.js';\r\nimport { updateBoxDelta } from '../../utils/geometry/delta-calc.js';\r\n\r\nfunction updateLayoutDeltas(_a, _b, treePath, transformOrigin) {\r\n    var delta = _a.delta, layout = _a.layout, layoutCorrected = _a.layoutCorrected, treeScale = _a.treeScale;\r\n    var target = _b.target;\r\n    /**\r\n     * Reset the corrected box with the latest values from box, as we're then going\r\n     * to perform mutative operations on it.\r\n     */\r\n    resetBox(layoutCorrected, layout);\r\n    /**\r\n     * Apply all the parent deltas to this box to produce the corrected box. This\r\n     * is the layout box, as it will appear on screen as a result of the transforms of its parents.\r\n     */\r\n    applyTreeDeltas(layoutCorrected, treeScale, treePath);\r\n    /**\r\n     * Update the delta between the corrected box and the target box before user-set transforms were applied.\r\n     * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\r\n     * for our layout reprojection, but still allow them to be scaled correctly by the user.\r\n     * It might be that to simplify this we may want to accept that user-set scale1 is also corrected\r\n     * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\r\n     * to allow people to choose whether these styles are corrected based on just the\r\n     * layout reprojection or the final bounding box.\r\n     */\r\n    updateBoxDelta(delta, layoutCorrected, target, transformOrigin);\r\n}\r\n\r\nexport { updateLayoutDeltas };\r\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,eAAnB,QAA0C,qCAA1C;AACA,SAASC,cAAT,QAA+B,oCAA/B;;AAEA,SAASC,kBAAT,CAA4BC,EAA5B,EAAgCC,EAAhC,EAAoCC,QAApC,EAA8CC,eAA9C,EAA+D;EAC3D,IAAIC,KAAK,GAAGJ,EAAE,CAACI,KAAf;EAAA,IAAsBC,MAAM,GAAGL,EAAE,CAACK,MAAlC;EAAA,IAA0CC,eAAe,GAAGN,EAAE,CAACM,eAA/D;EAAA,IAAgFC,SAAS,GAAGP,EAAE,CAACO,SAA/F;EACA,IAAIC,MAAM,GAAGP,EAAE,CAACO,MAAhB;EACA;AACJ;AACA;AACA;;EACIZ,QAAQ,CAACU,eAAD,EAAkBD,MAAlB,CAAR;EACA;AACJ;AACA;AACA;;EACIR,eAAe,CAACS,eAAD,EAAkBC,SAAlB,EAA6BL,QAA7B,CAAf;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACIJ,cAAc,CAACM,KAAD,EAAQE,eAAR,EAAyBE,MAAzB,EAAiCL,eAAjC,CAAd;AACH;;AAED,SAASJ,kBAAT"},"metadata":{},"sourceType":"module"}