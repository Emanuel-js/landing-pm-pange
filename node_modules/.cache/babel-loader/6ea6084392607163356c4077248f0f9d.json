{"ast":null,"code":"import { __assign } from 'tslib';\nimport { useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.js';\nimport { VisualElementDragControls } from './VisualElementDragControls.js';\nimport { useConstant } from '../../utils/use-constant.js';\n/**\r\n * A hook that allows an element to be dragged.\r\n *\r\n * @internal\r\n */\n\nfunction useDrag(props) {\n  var groupDragControls = props.dragControls,\n      visualElement = props.visualElement;\n  var transformPagePoint = useContext(MotionConfigContext).transformPagePoint;\n  var dragControls = useConstant(function () {\n    return new VisualElementDragControls({\n      visualElement: visualElement\n    });\n  });\n  dragControls.setProps(__assign(__assign({}, props), {\n    transformPagePoint: transformPagePoint\n  })); // If we've been provided a DragControls for manual control over the drag gesture,\n  // subscribe this component to it on mount.\n\n  useEffect(function () {\n    return groupDragControls && groupDragControls.subscribe(dragControls);\n  }, [dragControls]); // Mount the drag controls with the visualElement\n\n  useEffect(function () {\n    return dragControls.mount(visualElement);\n  }, []);\n}\n\nexport { useDrag };","map":{"version":3,"names":["__assign","useContext","useEffect","MotionConfigContext","VisualElementDragControls","useConstant","useDrag","props","groupDragControls","dragControls","visualElement","transformPagePoint","setProps","subscribe","mount"],"sources":["E:/Projects/project/project mangement dashbord/landing-pm-pange/node_modules/framer-motion/dist/es/gestures/drag/use-drag.js"],"sourcesContent":["import { __assign } from 'tslib';\r\nimport { useContext, useEffect } from 'react';\r\nimport { MotionConfigContext } from '../../context/MotionConfigContext.js';\r\nimport { VisualElementDragControls } from './VisualElementDragControls.js';\r\nimport { useConstant } from '../../utils/use-constant.js';\r\n\r\n/**\r\n * A hook that allows an element to be dragged.\r\n *\r\n * @internal\r\n */\r\nfunction useDrag(props) {\r\n    var groupDragControls = props.dragControls, visualElement = props.visualElement;\r\n    var transformPagePoint = useContext(MotionConfigContext).transformPagePoint;\r\n    var dragControls = useConstant(function () {\r\n        return new VisualElementDragControls({\r\n            visualElement: visualElement,\r\n        });\r\n    });\r\n    dragControls.setProps(__assign(__assign({}, props), { transformPagePoint: transformPagePoint }));\r\n    // If we've been provided a DragControls for manual control over the drag gesture,\r\n    // subscribe this component to it on mount.\r\n    useEffect(function () { return groupDragControls && groupDragControls.subscribe(dragControls); }, [dragControls]);\r\n    // Mount the drag controls with the visualElement\r\n    useEffect(function () { return dragControls.mount(visualElement); }, []);\r\n}\r\n\r\nexport { useDrag };\r\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,SAASC,mBAAT,QAAoC,sCAApC;AACA,SAASC,yBAAT,QAA0C,gCAA1C;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EACpB,IAAIC,iBAAiB,GAAGD,KAAK,CAACE,YAA9B;EAAA,IAA4CC,aAAa,GAAGH,KAAK,CAACG,aAAlE;EACA,IAAIC,kBAAkB,GAAGV,UAAU,CAACE,mBAAD,CAAV,CAAgCQ,kBAAzD;EACA,IAAIF,YAAY,GAAGJ,WAAW,CAAC,YAAY;IACvC,OAAO,IAAID,yBAAJ,CAA8B;MACjCM,aAAa,EAAEA;IADkB,CAA9B,CAAP;EAGH,CAJ6B,CAA9B;EAKAD,YAAY,CAACG,QAAb,CAAsBZ,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKO,KAAL,CAAT,EAAsB;IAAEI,kBAAkB,EAAEA;EAAtB,CAAtB,CAA9B,EARoB,CASpB;EACA;;EACAT,SAAS,CAAC,YAAY;IAAE,OAAOM,iBAAiB,IAAIA,iBAAiB,CAACK,SAAlB,CAA4BJ,YAA5B,CAA5B;EAAwE,CAAvF,EAAyF,CAACA,YAAD,CAAzF,CAAT,CAXoB,CAYpB;;EACAP,SAAS,CAAC,YAAY;IAAE,OAAOO,YAAY,CAACK,KAAb,CAAmBJ,aAAnB,CAAP;EAA2C,CAA1D,EAA4D,EAA5D,CAAT;AACH;;AAED,SAASJ,OAAT"},"metadata":{},"sourceType":"module"}