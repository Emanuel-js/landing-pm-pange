{"ast":null,"code":"import { __rest } from 'tslib';\nimport { buildHTMLStyles } from '../../html/utils/build-styles.js';\nimport { calcSVGTransformOrigin } from './transform-origin.js';\nimport { buildSVGPath } from './path.js';\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\n\nfunction buildSVGAttrs(state, _a, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin) {\n  var attrX = _a.attrX,\n      attrY = _a.attrY,\n      originX = _a.originX,\n      originY = _a.originY,\n      pathLength = _a.pathLength,\n      _b = _a.pathSpacing,\n      pathSpacing = _b === void 0 ? 1 : _b,\n      _c = _a.pathOffset,\n      pathOffset = _c === void 0 ? 0 : _c,\n      // This is object creation, which we try to avoid per-frame.\n  latest = __rest(_a, [\"attrX\", \"attrY\", \"originX\", \"originY\", \"pathLength\", \"pathSpacing\", \"pathOffset\"]);\n\n  buildHTMLStyles(state, latest, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin);\n  state.attrs = state.style;\n  state.style = {};\n  var attrs = state.attrs,\n      style = state.style,\n      dimensions = state.dimensions,\n      totalPathLength = state.totalPathLength;\n  /**\n   * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n   * and copy it into style.\n   */\n\n  if (attrs.transform) {\n    if (dimensions) style.transform = attrs.transform;\n    delete attrs.transform;\n  } // Parse transformOrigin\n\n\n  if (dimensions && (originX !== undefined || originY !== undefined || style.transform)) {\n    style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n  } // Treat x/y not as shortcuts but as actual attributes\n\n\n  if (attrX !== undefined) attrs.x = attrX;\n  if (attrY !== undefined) attrs.y = attrY; // Build SVG path if one has been measured\n\n  if (totalPathLength !== undefined && pathLength !== undefined) {\n    buildSVGPath(attrs, totalPathLength, pathLength, pathSpacing, pathOffset, false);\n  }\n}\n\nexport { buildSVGAttrs };","map":{"version":3,"names":["__rest","buildHTMLStyles","calcSVGTransformOrigin","buildSVGPath","buildSVGAttrs","state","_a","projection","layoutState","options","transformTemplate","buildProjectionTransform","buildProjectionTransformOrigin","attrX","attrY","originX","originY","pathLength","_b","pathSpacing","_c","pathOffset","latest","attrs","style","dimensions","totalPathLength","transform","undefined","transformOrigin","x","y"],"sources":["C:/Users/User/Desktop/ArifPAy/other file/me/node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.js"],"sourcesContent":["import { __rest } from 'tslib';\nimport { buildHTMLStyles } from '../../html/utils/build-styles.js';\nimport { calcSVGTransformOrigin } from './transform-origin.js';\nimport { buildSVGPath } from './path.js';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, _a, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin) {\n    var attrX = _a.attrX, attrY = _a.attrY, originX = _a.originX, originY = _a.originY, pathLength = _a.pathLength, _b = _a.pathSpacing, pathSpacing = _b === void 0 ? 1 : _b, _c = _a.pathOffset, pathOffset = _c === void 0 ? 0 : _c, \n    // This is object creation, which we try to avoid per-frame.\n    latest = __rest(_a, [\"attrX\", \"attrY\", \"originX\", \"originY\", \"pathLength\", \"pathSpacing\", \"pathOffset\"]);\n    buildHTMLStyles(state, latest, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin);\n    state.attrs = state.style;\n    state.style = {};\n    var attrs = state.attrs, style = state.style, dimensions = state.dimensions, totalPathLength = state.totalPathLength;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been measured\n    if (totalPathLength !== undefined && pathLength !== undefined) {\n        buildSVGPath(attrs, totalPathLength, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,SAASC,sBAAT,QAAuC,uBAAvC;AACA,SAASC,YAAT,QAA6B,WAA7B;AAEA;AACA;AACA;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,EAA9B,EAAkCC,UAAlC,EAA8CC,WAA9C,EAA2DC,OAA3D,EAAoEC,iBAApE,EAAuFC,wBAAvF,EAAiHC,8BAAjH,EAAiJ;EAC7I,IAAIC,KAAK,GAAGP,EAAE,CAACO,KAAf;EAAA,IAAsBC,KAAK,GAAGR,EAAE,CAACQ,KAAjC;EAAA,IAAwCC,OAAO,GAAGT,EAAE,CAACS,OAArD;EAAA,IAA8DC,OAAO,GAAGV,EAAE,CAACU,OAA3E;EAAA,IAAoFC,UAAU,GAAGX,EAAE,CAACW,UAApG;EAAA,IAAgHC,EAAE,GAAGZ,EAAE,CAACa,WAAxH;EAAA,IAAqIA,WAAW,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,CAAhB,GAAoBA,EAAvK;EAAA,IAA2KE,EAAE,GAAGd,EAAE,CAACe,UAAnL;EAAA,IAA+LA,UAAU,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,CAAhB,GAAoBA,EAAhO;EAAA,IACA;EACAE,MAAM,GAAGtB,MAAM,CAACM,EAAD,EAAK,CAAC,OAAD,EAAU,OAAV,EAAmB,SAAnB,EAA8B,SAA9B,EAAyC,YAAzC,EAAuD,aAAvD,EAAsE,YAAtE,CAAL,CAFf;;EAGAL,eAAe,CAACI,KAAD,EAAQiB,MAAR,EAAgBf,UAAhB,EAA4BC,WAA5B,EAAyCC,OAAzC,EAAkDC,iBAAlD,EAAqEC,wBAArE,EAA+FC,8BAA/F,CAAf;EACAP,KAAK,CAACkB,KAAN,GAAclB,KAAK,CAACmB,KAApB;EACAnB,KAAK,CAACmB,KAAN,GAAc,EAAd;EACA,IAAID,KAAK,GAAGlB,KAAK,CAACkB,KAAlB;EAAA,IAAyBC,KAAK,GAAGnB,KAAK,CAACmB,KAAvC;EAAA,IAA8CC,UAAU,GAAGpB,KAAK,CAACoB,UAAjE;EAAA,IAA6EC,eAAe,GAAGrB,KAAK,CAACqB,eAArG;EACA;AACJ;AACA;AACA;;EACI,IAAIH,KAAK,CAACI,SAAV,EAAqB;IACjB,IAAIF,UAAJ,EACID,KAAK,CAACG,SAAN,GAAkBJ,KAAK,CAACI,SAAxB;IACJ,OAAOJ,KAAK,CAACI,SAAb;EACH,CAhB4I,CAiB7I;;;EACA,IAAIF,UAAU,KACTV,OAAO,KAAKa,SAAZ,IAAyBZ,OAAO,KAAKY,SAArC,IAAkDJ,KAAK,CAACG,SAD/C,CAAd,EACyE;IACrEH,KAAK,CAACK,eAAN,GAAwB3B,sBAAsB,CAACuB,UAAD,EAAaV,OAAO,KAAKa,SAAZ,GAAwBb,OAAxB,GAAkC,GAA/C,EAAoDC,OAAO,KAAKY,SAAZ,GAAwBZ,OAAxB,GAAkC,GAAtF,CAA9C;EACH,CArB4I,CAsB7I;;;EACA,IAAIH,KAAK,KAAKe,SAAd,EACIL,KAAK,CAACO,CAAN,GAAUjB,KAAV;EACJ,IAAIC,KAAK,KAAKc,SAAd,EACIL,KAAK,CAACQ,CAAN,GAAUjB,KAAV,CA1ByI,CA2B7I;;EACA,IAAIY,eAAe,KAAKE,SAApB,IAAiCX,UAAU,KAAKW,SAApD,EAA+D;IAC3DzB,YAAY,CAACoB,KAAD,EAAQG,eAAR,EAAyBT,UAAzB,EAAqCE,WAArC,EAAkDE,UAAlD,EAA8D,KAA9D,CAAZ;EACH;AACJ;;AAED,SAASjB,aAAT"},"metadata":{},"sourceType":"module"}