{"ast":null,"code":"import { __assign } from 'tslib';\nimport { number, alpha } from '../numbers/index.js';\nimport { sanitize, clamp } from '../utils.js';\nimport { isColorString, splitColor } from './utils.js';\nvar clampRgbUnit = clamp(0, 255);\n\nvar rgbUnit = __assign(__assign({}, number), {\n  transform: function (v) {\n    return Math.round(clampRgbUnit(v));\n  }\n});\n\nvar rgba = {\n  test: isColorString('rgb', 'red'),\n  parse: splitColor('red', 'green', 'blue'),\n  transform: function (_a) {\n    var red = _a.red,\n        green = _a.green,\n        blue = _a.blue,\n        _b = _a.alpha,\n        alpha$1 = _b === void 0 ? 1 : _b;\n    return 'rgba(' + rgbUnit.transform(red) + ', ' + rgbUnit.transform(green) + ', ' + rgbUnit.transform(blue) + ', ' + sanitize(alpha.transform(alpha$1)) + ')';\n  }\n};\nexport { rgbUnit, rgba };","map":{"version":3,"names":["__assign","number","alpha","sanitize","clamp","isColorString","splitColor","clampRgbUnit","rgbUnit","transform","v","Math","round","rgba","test","parse","_a","red","green","blue","_b","alpha$1"],"sources":["E:/Projects/project/project mangement dashbord/landing-pm-pange/node_modules/style-value-types/dist/es/color/rgba.js"],"sourcesContent":["import { __assign } from 'tslib';\r\nimport { number, alpha } from '../numbers/index.js';\r\nimport { sanitize, clamp } from '../utils.js';\r\nimport { isColorString, splitColor } from './utils.js';\r\n\r\nvar clampRgbUnit = clamp(0, 255);\r\nvar rgbUnit = __assign(__assign({}, number), { transform: function (v) { return Math.round(clampRgbUnit(v)); } });\r\nvar rgba = {\r\n    test: isColorString('rgb', 'red'),\r\n    parse: splitColor('red', 'green', 'blue'),\r\n    transform: function (_a) {\r\n        var red = _a.red, green = _a.green, blue = _a.blue, _b = _a.alpha, alpha$1 = _b === void 0 ? 1 : _b;\r\n        return 'rgba(' +\r\n            rgbUnit.transform(red) +\r\n            ', ' +\r\n            rgbUnit.transform(green) +\r\n            ', ' +\r\n            rgbUnit.transform(blue) +\r\n            ', ' +\r\n            sanitize(alpha.transform(alpha$1)) +\r\n            ')';\r\n    },\r\n};\r\n\r\nexport { rgbUnit, rgba };\r\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,qBAA9B;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,aAAhC;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,YAA1C;AAEA,IAAIC,YAAY,GAAGH,KAAK,CAAC,CAAD,EAAI,GAAJ,CAAxB;;AACA,IAAII,OAAO,GAAGR,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKC,MAAL,CAAT,EAAuB;EAAEQ,SAAS,EAAE,UAAUC,CAAV,EAAa;IAAE,OAAOC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACG,CAAD,CAAvB,CAAP;EAAqC;AAAjE,CAAvB,CAAtB;;AACA,IAAIG,IAAI,GAAG;EACPC,IAAI,EAAET,aAAa,CAAC,KAAD,EAAQ,KAAR,CADZ;EAEPU,KAAK,EAAET,UAAU,CAAC,KAAD,EAAQ,OAAR,EAAiB,MAAjB,CAFV;EAGPG,SAAS,EAAE,UAAUO,EAAV,EAAc;IACrB,IAAIC,GAAG,GAAGD,EAAE,CAACC,GAAb;IAAA,IAAkBC,KAAK,GAAGF,EAAE,CAACE,KAA7B;IAAA,IAAoCC,IAAI,GAAGH,EAAE,CAACG,IAA9C;IAAA,IAAoDC,EAAE,GAAGJ,EAAE,CAACd,KAA5D;IAAA,IAAmEmB,OAAO,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,CAAhB,GAAoBA,EAAjG;IACA,OAAO,UACHZ,OAAO,CAACC,SAAR,CAAkBQ,GAAlB,CADG,GAEH,IAFG,GAGHT,OAAO,CAACC,SAAR,CAAkBS,KAAlB,CAHG,GAIH,IAJG,GAKHV,OAAO,CAACC,SAAR,CAAkBU,IAAlB,CALG,GAMH,IANG,GAOHhB,QAAQ,CAACD,KAAK,CAACO,SAAN,CAAgBY,OAAhB,CAAD,CAPL,GAQH,GARJ;EASH;AAdM,CAAX;AAiBA,SAASb,OAAT,EAAkBK,IAAlB"},"metadata":{},"sourceType":"module"}