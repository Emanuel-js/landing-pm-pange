{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dumpClassLists = dumpClassLists;\nvar htmlClassList = {};\nvar docBodyClassList = {};\n\nfunction dumpClassLists() {\n  if (process.env.NODE_ENV !== \"production\") {\n    var classes = document.getElementsByTagName(\"html\")[0].className;\n    var buffer = \"Show tracked classes:\\n\\n\";\n    buffer += \"<html /> (\" + classes + \"):\\n\";\n\n    for (var x in htmlClassList) {\n      buffer += \"  \" + x + \" \" + htmlClassList[x] + \"\\n\";\n    }\n\n    classes = document.body.className; // eslint-disable-next-line max-len\n\n    buffer += \"\\n\\ndoc.body (\" + classes + \"):\\n\";\n\n    for (var _x in docBodyClassList) {\n      buffer += \"  \" + _x + \" \" + docBodyClassList[_x] + \"\\n\";\n    }\n\n    buffer += \"\\n\"; // eslint-disable-next-line no-console\n\n    console.log(buffer);\n  }\n}\n/**\r\n * Track the number of reference of a class.\r\n * @param {object} poll The poll to receive the reference.\r\n * @param {string} className The class name.\r\n * @return {string}\r\n */\n\n\nvar incrementReference = function incrementReference(poll, className) {\n  if (!poll[className]) {\n    poll[className] = 0;\n  }\n\n  poll[className] += 1;\n  return className;\n};\n/**\r\n * Drop the reference of a class.\r\n * @param {object} poll The poll to receive the reference.\r\n * @param {string} className The class name.\r\n * @return {string}\r\n */\n\n\nvar decrementReference = function decrementReference(poll, className) {\n  if (poll[className]) {\n    poll[className] -= 1;\n  }\n\n  return className;\n};\n/**\r\n * Track a class and add to the given class list.\r\n * @param {Object} classListRef A class list of an element.\r\n * @param {Object} poll         The poll to be used.\r\n * @param {Array}  classes      The list of classes to be tracked.\r\n */\n\n\nvar trackClass = function trackClass(classListRef, poll, classes) {\n  classes.forEach(function (className) {\n    incrementReference(poll, className);\n    classListRef.add(className);\n  });\n};\n/**\r\n * Untrack a class and remove from the given class list if the reference\r\n * reaches 0.\r\n * @param {Object} classListRef A class list of an element.\r\n * @param {Object} poll         The poll to be used.\r\n * @param {Array}  classes      The list of classes to be untracked.\r\n */\n\n\nvar untrackClass = function untrackClass(classListRef, poll, classes) {\n  classes.forEach(function (className) {\n    decrementReference(poll, className);\n    poll[className] === 0 && classListRef.remove(className);\n  });\n};\n/**\r\n * Public inferface to add classes to the document.body.\r\n * @param {string} bodyClass The class string to be added.\r\n *                           It may contain more then one class\r\n *                           with ' ' as separator.\r\n */\n\n\nvar add = exports.add = function add(element, classString) {\n  return trackClass(element.classList, element.nodeName.toLowerCase() == \"html\" ? htmlClassList : docBodyClassList, classString.split(\" \"));\n};\n/**\r\n * Public inferface to remove classes from the document.body.\r\n * @param {string} bodyClass The class string to be added.\r\n *                           It may contain more then one class\r\n *                           with ' ' as separator.\r\n */\n\n\nvar remove = exports.remove = function remove(element, classString) {\n  return untrackClass(element.classList, element.nodeName.toLowerCase() == \"html\" ? htmlClassList : docBodyClassList, classString.split(\" \"));\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","dumpClassLists","htmlClassList","docBodyClassList","process","env","NODE_ENV","classes","document","getElementsByTagName","className","buffer","x","body","_x","console","log","incrementReference","poll","decrementReference","trackClass","classListRef","forEach","add","untrackClass","remove","element","classString","classList","nodeName","toLowerCase","split"],"sources":["E:/Projects/project/project mangement dashbord/landing-pm-pange/node_modules/react-modal/lib/helpers/classList.js"],"sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.dumpClassLists = dumpClassLists;\r\nvar htmlClassList = {};\r\nvar docBodyClassList = {};\r\n\r\nfunction dumpClassLists() {\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    var classes = document.getElementsByTagName(\"html\")[0].className;\r\n    var buffer = \"Show tracked classes:\\n\\n\";\r\n\r\n    buffer += \"<html /> (\" + classes + \"):\\n\";\r\n    for (var x in htmlClassList) {\r\n      buffer += \"  \" + x + \" \" + htmlClassList[x] + \"\\n\";\r\n    }\r\n\r\n    classes = document.body.className;\r\n\r\n    // eslint-disable-next-line max-len\r\n    buffer += \"\\n\\ndoc.body (\" + classes + \"):\\n\";\r\n    for (var _x in docBodyClassList) {\r\n      buffer += \"  \" + _x + \" \" + docBodyClassList[_x] + \"\\n\";\r\n    }\r\n\r\n    buffer += \"\\n\";\r\n\r\n    // eslint-disable-next-line no-console\r\n    console.log(buffer);\r\n  }\r\n}\r\n\r\n/**\r\n * Track the number of reference of a class.\r\n * @param {object} poll The poll to receive the reference.\r\n * @param {string} className The class name.\r\n * @return {string}\r\n */\r\nvar incrementReference = function incrementReference(poll, className) {\r\n  if (!poll[className]) {\r\n    poll[className] = 0;\r\n  }\r\n  poll[className] += 1;\r\n  return className;\r\n};\r\n\r\n/**\r\n * Drop the reference of a class.\r\n * @param {object} poll The poll to receive the reference.\r\n * @param {string} className The class name.\r\n * @return {string}\r\n */\r\nvar decrementReference = function decrementReference(poll, className) {\r\n  if (poll[className]) {\r\n    poll[className] -= 1;\r\n  }\r\n  return className;\r\n};\r\n\r\n/**\r\n * Track a class and add to the given class list.\r\n * @param {Object} classListRef A class list of an element.\r\n * @param {Object} poll         The poll to be used.\r\n * @param {Array}  classes      The list of classes to be tracked.\r\n */\r\nvar trackClass = function trackClass(classListRef, poll, classes) {\r\n  classes.forEach(function (className) {\r\n    incrementReference(poll, className);\r\n    classListRef.add(className);\r\n  });\r\n};\r\n\r\n/**\r\n * Untrack a class and remove from the given class list if the reference\r\n * reaches 0.\r\n * @param {Object} classListRef A class list of an element.\r\n * @param {Object} poll         The poll to be used.\r\n * @param {Array}  classes      The list of classes to be untracked.\r\n */\r\nvar untrackClass = function untrackClass(classListRef, poll, classes) {\r\n  classes.forEach(function (className) {\r\n    decrementReference(poll, className);\r\n    poll[className] === 0 && classListRef.remove(className);\r\n  });\r\n};\r\n\r\n/**\r\n * Public inferface to add classes to the document.body.\r\n * @param {string} bodyClass The class string to be added.\r\n *                           It may contain more then one class\r\n *                           with ' ' as separator.\r\n */\r\nvar add = exports.add = function add(element, classString) {\r\n  return trackClass(element.classList, element.nodeName.toLowerCase() == \"html\" ? htmlClassList : docBodyClassList, classString.split(\" \"));\r\n};\r\n\r\n/**\r\n * Public inferface to remove classes from the document.body.\r\n * @param {string} bodyClass The class string to be added.\r\n *                           It may contain more then one class\r\n *                           with ' ' as separator.\r\n */\r\nvar remove = exports.remove = function remove(element, classString) {\r\n  return untrackClass(element.classList, element.nodeName.toLowerCase() == \"html\" ? htmlClassList : docBodyClassList, classString.split(\" \"));\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}