{"ast":null,"code":"import { __assign } from 'tslib';\nimport { visualElement } from '../index.js';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\nimport { htmlConfig } from '../html/visual-element.js';\nimport { buildSVGAttrs } from './utils/build-attrs.js';\nimport { camelToDash } from '../dom/utils/camel-to-dash.js';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.js';\nimport { isTransformProp } from '../html/utils/transform.js';\nimport { renderSVG } from './utils/render.js';\nimport { getDefaultValueType } from '../dom/value-types/defaults.js';\nimport { buildLayoutProjectionTransformOrigin, buildLayoutProjectionTransform } from '../html/utils/build-projection-transform.js';\nvar svgVisualElement = visualElement(__assign(__assign({}, htmlConfig), {\n  getBaseTarget: function (props, key) {\n    return props[key];\n  },\n  readValueFromInstance: function (domElement, key) {\n    var _a;\n\n    if (isTransformProp(key)) {\n      return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n    }\n\n    key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n    return domElement.getAttribute(key);\n  },\n  scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n  build: function (_element, renderState, latestValues, projection, layoutState, options, props) {\n    var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\n    buildSVGAttrs(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : undefined, isProjectionTranform ? buildLayoutProjectionTransformOrigin : undefined);\n  },\n  render: renderSVG\n}));\nexport { svgVisualElement };","map":{"version":3,"names":["__assign","visualElement","scrapeMotionValuesFromProps","htmlConfig","buildSVGAttrs","camelToDash","camelCaseAttributes","isTransformProp","renderSVG","getDefaultValueType","buildLayoutProjectionTransformOrigin","buildLayoutProjectionTransform","svgVisualElement","getBaseTarget","props","key","readValueFromInstance","domElement","_a","default","has","getAttribute","build","_element","renderState","latestValues","projection","layoutState","options","isProjectionTranform","isEnabled","isHydrated","transformTemplate","undefined","render"],"sources":["C:/Users/User/Desktop/ArifPAy/other file/me/node_modules/framer-motion/dist/es/render/svg/visual-element.js"],"sourcesContent":["import { __assign } from 'tslib';\nimport { visualElement } from '../index.js';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\nimport { htmlConfig } from '../html/visual-element.js';\nimport { buildSVGAttrs } from './utils/build-attrs.js';\nimport { camelToDash } from '../dom/utils/camel-to-dash.js';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.js';\nimport { isTransformProp } from '../html/utils/transform.js';\nimport { renderSVG } from './utils/render.js';\nimport { getDefaultValueType } from '../dom/value-types/defaults.js';\nimport { buildLayoutProjectionTransformOrigin, buildLayoutProjectionTransform } from '../html/utils/build-projection-transform.js';\n\nvar svgVisualElement = visualElement(__assign(__assign({}, htmlConfig), { getBaseTarget: function (props, key) {\n        return props[key];\n    },\n    readValueFromInstance: function (domElement, key) {\n        var _a;\n        if (isTransformProp(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return domElement.getAttribute(key);\n    },\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    build: function (_element, renderState, latestValues, projection, layoutState, options, props) {\n        var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\n        buildSVGAttrs(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : undefined, isProjectionTranform\n            ? buildLayoutProjectionTransformOrigin\n            : undefined);\n    }, render: renderSVG }));\n\nexport { svgVisualElement };\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,SAASC,2BAAT,QAA4C,iCAA5C;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,mBAAT,QAAoC,6BAApC;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,mBAAT,QAAoC,gCAApC;AACA,SAASC,oCAAT,EAA+CC,8BAA/C,QAAqF,6CAArF;AAEA,IAAIC,gBAAgB,GAAGX,aAAa,CAACD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKG,UAAL,CAAT,EAA2B;EAAEU,aAAa,EAAE,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;IACvG,OAAOD,KAAK,CAACC,GAAD,CAAZ;EACH,CAFmE;EAGpEC,qBAAqB,EAAE,UAAUC,UAAV,EAAsBF,GAAtB,EAA2B;IAC9C,IAAIG,EAAJ;;IACA,IAAIX,eAAe,CAACQ,GAAD,CAAnB,EAA0B;MACtB,OAAO,CAAC,CAACG,EAAE,GAAGT,mBAAmB,CAACM,GAAD,CAAzB,MAAoC,IAApC,IAA4CG,EAAE,KAAK,KAAK,CAAxD,GAA4D,KAAK,CAAjE,GAAqEA,EAAE,CAACC,OAAzE,KAAqF,CAA5F;IACH;;IACDJ,GAAG,GAAG,CAACT,mBAAmB,CAACc,GAApB,CAAwBL,GAAxB,CAAD,GAAgCV,WAAW,CAACU,GAAD,CAA3C,GAAmDA,GAAzD;IACA,OAAOE,UAAU,CAACI,YAAX,CAAwBN,GAAxB,CAAP;EACH,CAVmE;EAWpEb,2BAA2B,EAAEA,2BAXuC;EAYpEoB,KAAK,EAAE,UAAUC,QAAV,EAAoBC,WAApB,EAAiCC,YAAjC,EAA+CC,UAA/C,EAA2DC,WAA3D,EAAwEC,OAAxE,EAAiFd,KAAjF,EAAwF;IAC3F,IAAIe,oBAAoB,GAAGH,UAAU,CAACI,SAAX,IAAwBH,WAAW,CAACI,UAA/D;IACA3B,aAAa,CAACoB,WAAD,EAAcC,YAAd,EAA4BC,UAA5B,EAAwCC,WAAxC,EAAqDC,OAArD,EAA8Dd,KAAK,CAACkB,iBAApE,EAAuFH,oBAAoB,GAAGlB,8BAAH,GAAoCsB,SAA/I,EAA0JJ,oBAAoB,GACrLnB,oCADqL,GAErLuB,SAFO,CAAb;EAGH,CAjBmE;EAiBjEC,MAAM,EAAE1B;AAjByD,CAA3B,CAAT,CAApC;AAmBA,SAASI,gBAAT"},"metadata":{},"sourceType":"module"}