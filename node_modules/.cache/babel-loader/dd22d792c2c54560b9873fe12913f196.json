{"ast":null,"code":"import { __rest, __assign } from 'tslib';\nimport { findSpring, calcAngularFreq } from '../utils/find-spring.js';\nvar durationKeys = [\"duration\", \"bounce\"];\nvar physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\n\nfunction isSpringType(options, keys) {\n  return keys.some(function (key) {\n    return options[key] !== undefined;\n  });\n}\n\nfunction getSpringOptions(options) {\n  var springOptions = __assign({\n    velocity: 0.0,\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    isResolvedFromDuration: false\n  }, options);\n\n  if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {\n    var derived = findSpring(options);\n    springOptions = __assign(__assign(__assign({}, springOptions), derived), {\n      velocity: 0.0,\n      mass: 1.0\n    });\n    springOptions.isResolvedFromDuration = true;\n  }\n\n  return springOptions;\n}\n\nfunction spring(_a) {\n  var _b = _a.from,\n      from = _b === void 0 ? 0.0 : _b,\n      _c = _a.to,\n      to = _c === void 0 ? 1.0 : _c,\n      _d = _a.restSpeed,\n      restSpeed = _d === void 0 ? 2 : _d,\n      restDelta = _a.restDelta,\n      options = __rest(_a, [\"from\", \"to\", \"restSpeed\", \"restDelta\"]);\n\n  var state = {\n    done: false,\n    value: from\n  };\n\n  var _e = getSpringOptions(options),\n      stiffness = _e.stiffness,\n      damping = _e.damping,\n      mass = _e.mass,\n      velocity = _e.velocity,\n      isResolvedFromDuration = _e.isResolvedFromDuration;\n\n  var resolveSpring = zero;\n  var resolveVelocity = zero;\n\n  function createSpring() {\n    var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    var initialDelta = to - from;\n    var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    var undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n    restDelta !== null && restDelta !== void 0 ? restDelta : restDelta = Math.abs(to - from) <= 1 ? 0.01 : 0.4;\n\n    if (dampingRatio < 1) {\n      var angularFreq_1 = calcAngularFreq(undampedAngularFreq, dampingRatio);\n\n      resolveSpring = function (t) {\n        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n        return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 * Math.sin(angularFreq_1 * t) + initialDelta * Math.cos(angularFreq_1 * t));\n      };\n\n      resolveVelocity = function (t) {\n        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n        return dampingRatio * undampedAngularFreq * envelope * (Math.sin(angularFreq_1 * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 + initialDelta * Math.cos(angularFreq_1 * t)) - envelope * (Math.cos(angularFreq_1 * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) - angularFreq_1 * initialDelta * Math.sin(angularFreq_1 * t));\n      };\n    } else if (dampingRatio === 1) {\n      resolveSpring = function (t) {\n        return to - Math.exp(-undampedAngularFreq * t) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t);\n      };\n    } else {\n      var dampedAngularFreq_1 = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n\n      resolveSpring = function (t) {\n        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n        var freqForT = Math.min(dampedAngularFreq_1 * t, 300);\n        return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq_1 * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq_1;\n      };\n    }\n  }\n\n  createSpring();\n  return {\n    next: function (t) {\n      var current = resolveSpring(t);\n\n      if (!isResolvedFromDuration) {\n        var currentVelocity = resolveVelocity(t) * 1000;\n        var isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n        var isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n        state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n      } else {\n        state.done = t >= options.duration;\n      }\n\n      state.value = state.done ? to : current;\n      return state;\n    },\n    flipTarget: function () {\n      var _a;\n\n      velocity = -velocity;\n      _a = [to, from], from = _a[0], to = _a[1];\n      createSpring();\n    }\n  };\n}\n\nspring.needsInterpolation = function (a, b) {\n  return typeof a === \"string\" || typeof b === \"string\";\n};\n\nvar zero = function (_t) {\n  return 0;\n};\n\nexport { spring };","map":{"version":3,"names":["__rest","__assign","findSpring","calcAngularFreq","durationKeys","physicsKeys","isSpringType","options","keys","some","key","undefined","getSpringOptions","springOptions","velocity","stiffness","damping","mass","isResolvedFromDuration","derived","spring","_a","_b","from","_c","to","_d","restSpeed","restDelta","state","done","value","_e","resolveSpring","zero","resolveVelocity","createSpring","initialVelocity","initialDelta","dampingRatio","Math","sqrt","undampedAngularFreq","abs","angularFreq_1","t","envelope","exp","sin","cos","dampedAngularFreq_1","freqForT","min","sinh","cosh","next","current","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","duration","flipTarget","needsInterpolation","a","b","_t"],"sources":["C:/Users/User/Desktop/ArifPAy/other file/me/node_modules/popmotion/dist/es/animations/generators/spring.js"],"sourcesContent":["import { __rest, __assign } from 'tslib';\nimport { findSpring, calcAngularFreq } from '../utils/find-spring.js';\n\nvar durationKeys = [\"duration\", \"bounce\"];\nvar physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some(function (key) { return options[key] !== undefined; });\n}\nfunction getSpringOptions(options) {\n    var springOptions = __assign({ velocity: 0.0, stiffness: 100, damping: 10, mass: 1.0, isResolvedFromDuration: false }, options);\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        var derived = findSpring(options);\n        springOptions = __assign(__assign(__assign({}, springOptions), derived), { velocity: 0.0, mass: 1.0 });\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring(_a) {\n    var _b = _a.from, from = _b === void 0 ? 0.0 : _b, _c = _a.to, to = _c === void 0 ? 1.0 : _c, _d = _a.restSpeed, restSpeed = _d === void 0 ? 2 : _d, restDelta = _a.restDelta, options = __rest(_a, [\"from\", \"to\", \"restSpeed\", \"restDelta\"]);\n    var state = { done: false, value: from };\n    var _e = getSpringOptions(options), stiffness = _e.stiffness, damping = _e.damping, mass = _e.mass, velocity = _e.velocity, isResolvedFromDuration = _e.isResolvedFromDuration;\n    var resolveSpring = zero;\n    var resolveVelocity = zero;\n    function createSpring() {\n        var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        var initialDelta = to - from;\n        var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        var undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        restDelta !== null && restDelta !== void 0 ? restDelta : (restDelta = Math.abs(to - from) <= 1 ? 0.01 : 0.4);\n        if (dampingRatio < 1) {\n            var angularFreq_1 = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            resolveSpring = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq_1) *\n                            Math.sin(angularFreq_1 * t) +\n                            initialDelta * Math.cos(angularFreq_1 * t)));\n            };\n            resolveVelocity = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (dampingRatio *\n                    undampedAngularFreq *\n                    envelope *\n                    ((Math.sin(angularFreq_1 * t) *\n                        (initialVelocity +\n                            dampingRatio *\n                                undampedAngularFreq *\n                                initialDelta)) /\n                        angularFreq_1 +\n                        initialDelta * Math.cos(angularFreq_1 * t)) -\n                    envelope *\n                        (Math.cos(angularFreq_1 * t) *\n                            (initialVelocity +\n                                dampingRatio *\n                                    undampedAngularFreq *\n                                    initialDelta) -\n                            angularFreq_1 *\n                                initialDelta *\n                                Math.sin(angularFreq_1 * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            resolveSpring = function (t) {\n                return to -\n                    Math.exp(-undampedAngularFreq * t) *\n                        (initialDelta +\n                            (initialVelocity + undampedAngularFreq * initialDelta) *\n                                t);\n            };\n        }\n        else {\n            var dampedAngularFreq_1 = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                var freqForT = Math.min(dampedAngularFreq_1 * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq_1 *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq_1);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: function (t) {\n            var current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                var currentVelocity = resolveVelocity(t) * 1000;\n                var isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                var isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= options.duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: function () {\n            var _a;\n            velocity = -velocity;\n            _a = [to, from], from = _a[0], to = _a[1];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = function (a, b) {\n    return typeof a === \"string\" || typeof b === \"string\";\n};\nvar zero = function (_t) { return 0; };\n\nexport { spring };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}